{"version":3,"sources":["Components/Resume.js","Components/containers/ResumeListView.js","Components/EditExisting.js","Components/Comment.js","Components/containers/CommentContainer.js","Components/containers/ResumeDetailView.js","Components/Create.js","Components/Success.js","store/actions/auth.js","store/actions/actionTypes.js","Components/containers/Login.js","Components/containers/Signup.js","Components/containers/MyTemplates.js","routes.js","Components/containers/Layout.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["IconText","icon","text","React","createElement","Resumes","props","itemLayout","size","pagination","onChange","page","console","log","pageSize","dataSource","data","renderItem","item","Item","key","title","actions","StarOutlined","LikeOutlined","MessageOutlined","extra","width","alt","src","Meta","avatar","href","id","description","ResumeList","state","resumes","fetch","headers","then","res","json","response","setState","Resume","this","Component","connect","token","EditExisting","emailEditorRef","useRef","exportHtml","current","editor","design","html","alert","html2","Blob","type","url","URL","createObjectURL","a","document","download","click","onLoad","loadDesign","content","user","parseInt","localStorage","getItem","onClick","saveDesign","Cookies","get","method","body","JSON","stringify","ref","IndivComment","author","commentsData","name","datetime","moment","format","created_on","TextArea","Input","CommentContainer","handleClick","resume","userid","prevState","commentsList","catch","err","handleChange","e","preventDefault","target","value","Authorization","map","rows","ResumeDetail","resumeID","match","params","Editor","emailEditorRefNew","placeholder","getElementById","Success","status","subTitle","authSuccess","authFail","error","logout","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","getid","axios","credentials","pk","setItem","idSuccess","Error","layout","labelCol","span","wrapperCol","tailLayout","offset","loading","onAuth","username","password","expirationDate","Date","getTime","message","errorMessage","initialValues","remember","onFinish","values","history","push","onFinishFailed","errorInfo","label","rules","required","Password","style","marginRight","to","email","password1","password2","Form","useForm","form","confirm","scrollToFirstError","hasFeedback","dependencies","getFieldValue","validator","rule","Promise","reject","resolve","MyTemplates","mytemplates","filter","result","BaseRouter","exact","path","component","Login","Signup","Header","Layout","Content","Footer","CustomLayout","className","theme","mode","defaultSelectedKeys","isAuthenticated","padding","margin","children","textAlign","withRouter","App","onTryAutoSignup","undefined","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","initialState","authStart","action","authLogout","reducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","app","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4TAQMA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACb,kBAAC,IAAD,KACKC,IAAMC,cAAcH,GACpBC,IAgDMG,EA5CC,SAACC,GACb,OACI,oCACI,kBAAC,IAAD,CACIC,WAAW,WACXC,KAAK,QACLC,WAAY,CACRC,SAAU,SAAAC,GACNC,QAAQC,IAAIF,IAEhBG,SAAU,GAEdC,WAAYT,EAAMU,KAElBC,WAAY,SAAAC,GAAI,OACZ,kBAAC,IAAKC,KAAN,CACIC,IAAKF,EAAKG,MACVC,QAAS,CACL,kBAAC,EAAD,CAAUrB,KAAMsB,IAAcrB,KAAK,MAAMkB,IAAI,yBAC7C,kBAAC,EAAD,CAAUnB,KAAMuB,IAActB,KAAK,MAAMkB,IAAI,yBAC7C,kBAAC,EAAD,CAAUnB,KAAMwB,IAAiBvB,KAAK,IAAIkB,IAAI,2BAElDM,MACI,yBACIC,MAAO,IACPC,IAAI,OACJC,IAAI,yEAIZ,kBAAC,IAAKV,KAAKW,KAAX,CACIC,OAAQ,kBAAC,IAAD,CAAQF,IAAKX,EAAKa,SAC1BV,MAAO,uBAAGW,KAAI,gBAAWd,EAAKe,KAAOf,EAAKG,OAC1Ca,YAAahB,EAAKgB,oB,yBC1CxCC,E,4MAEFC,MAAQ,CACJC,QAAS,I,kEAGQ,IAAD,OAEhBC,MAAM,QAAS,CACXC,QAAS,CACL,eAAgB,sBAGnBC,MAAK,SAAAC,GAEF,OADeA,EAAIC,UAGtBF,MAAK,SAAAG,GACF/B,QAAQC,IAAI8B,GACZ,EAAKC,SAAS,CAAEP,QAASM,EAAS3B,Y,+BAK1C,OACI,oCACI,kBAAC6B,EAAD,CAAS7B,KAAM8B,KAAKV,MAAMC,e,GA1BjBlC,IAAM4C,WAwChBC,eAPS,SAAAZ,GACpB,MAAO,CACHa,MAAOb,EAAMa,SAKmB,KAAzBD,CAA+Bb,G,qDCkC/Be,EAzEM,SAAC5C,GAClB,IAAM6C,EAAiBC,iBAAO,MAuBxBC,EAAa,WACfF,EAAeG,QAAQC,OAAOF,YAAW,SAACrC,GACbA,EAAjBwC,OADwC,IAChCC,EAASzC,EAATyC,KAChB7C,QAAQC,IAAI,aAAc4C,GAC1BC,MAAM,0DAEN,IAAIC,EAAQ,IAAIC,KAAK,CAACH,GAAO,CACzBI,KAAM,oBAGNC,EAAMC,IAAIC,gBAAgBL,GAC1BM,EAAIC,SAAS9D,cAAc,KAC/B6D,EAAEjC,KAAO8B,EACTG,EAAEE,SAAW,aACbF,EAAEG,YAKJC,EAAS,WACXlB,EAAeG,QAAQC,OAAOe,WAAWhE,EAAMiE,SAC/C3D,QAAQC,IAAIP,EAAO,aAIvB,OACI,oCAEQA,EAAMkE,OAASC,SAASC,aAAaC,QAAQ,aACzC,6BAEI,4BAAQC,QAnDT,WACfzB,EAAeG,QAAQC,OAAOsB,YAAW,SAACrB,GACtC,IAAIxC,EAAO,CAAEK,MAAOf,EAAMe,MAAOkD,QAASf,EAAQvB,GAAI3B,EAAM2B,GAAI,oBAAuB6C,IAAQC,IAAI,cACnGnE,QAAQC,IAAIG,GACZsB,MAAM,QAAD,OAAShC,EAAM2B,GAAf,YAA6B,CAC9B+C,OAAQ,MACRC,KAAMC,KAAKC,UAAUnE,GACrBuB,QAAS,CACL,OAAU,mBACV,eAAgB,sBAGnBC,MAAK,SAAUG,GACZ/B,QAAQC,IAAI8B,GACZe,MAAM,6CAqCF,eACA,4BAAQkB,QAASvB,GAAjB,iBACA,kBAAC,IAAD,CAAa+B,IAAKjC,EAAgBkB,OAAQA,IAC1C,kBAAC,IAAD,OAGF,6BAEE,4BAAQO,QAASvB,GAAjB,iBACA,kBAAC,IAAD,CAAa+B,IAAKjC,EAAgBkB,OAAQA,IAC1C,kBAAC,IAAD,S,4CCxCTgB,MA3Bf,SAAsB/E,GAClB,OACI,6BACI,kBAAC,IAAD,CAEIgF,OAAQhF,EAAMiF,aAAaC,KAC3BzD,OACI,kBAAC,IAAD,CACIF,IAAI,mEACJD,IAAI,aAGZ2C,QACI,2BACKjE,EAAMiF,aAAaN,MAG5BQ,SACI,kBAAC,IAAD,CAASpE,MAAOqE,MAASC,OAAO,wBAC5B,8BAAOrF,EAAMiF,aAAaK,iB,iBCf1CC,EAAaC,IAAbD,SAEFE,E,4MAEF3D,MAAQ,CACJ6C,KAAM,I,EAEVe,YAAc,WACV,IAAIhF,EAAO,CAAEiF,OAAQ,EAAK3F,MAAM2B,GAAIuD,KAAMd,aAAaC,QAAQ,YAAauB,OAAQxB,aAAaC,QAAQ,YAAaM,KAAM,EAAK7C,MAAM6C,KAAM,oBAAuBH,IAAQC,IAAI,cAChLnE,QAAQC,IAAIG,GACZsB,MAAM,gBAAD,OAAiB,EAAKhC,MAAM2B,GAA5B,KAAmC,CACpC+C,OAAQ,OACRC,KAAMC,KAAKC,UAAUnE,GACrBuB,QAAS,CACL,OAAU,mBACV,eAAgB,sBAGnBC,MAAK,SAAAG,GAEF,OADAe,MAAM,qCACCf,EAASD,UAInBF,MAAK,SAAAC,GACF7B,QAAQC,IAAI4B,GACZ,EAAKG,UAAS,SAAAuD,GAAS,MAAK,CAAEC,aAAa,GAAD,mBAAMD,EAAUC,cAAhB,CAA8B3D,QACxE,EAAKG,SAAS,CAAEqC,KAAM,QAEzBoB,OAAM,SAAAC,GACH1F,QAAQC,IAAIyF,O,EAIxBC,aAAe,SAACC,GACZA,EAAEC,iBACF,EAAK7D,SAAS,CAAEqC,KAAMuB,EAAEE,OAAOC,S,kEAEd,IAAD,OAEhBrE,MAAM,gBAAD,OAAiBQ,KAAKxC,MAAM2B,GAA5B,KAAmC,CACpCM,QAAS,CACL,eAAgB,mBAChBqE,cAAe9D,KAAKxC,MAAM2C,SAG7BT,MAAK,SAAAC,GAEF,EAAKG,SAAS,CAAEwD,aAAc3D,EAAIzB,Y,+BAKpC,IAAD,OAEL,OACI,oCAEQ8B,KAAKV,MAAMgE,aAAetD,KAAKV,MAAMgE,aAAaS,KAAI,SAAA3F,GAClD,OAAO,kBAAC,EAAD,CAAcqE,aAAcrE,OAClC,8CAIT,kBAAC2E,EAAD,CAAUiB,KAAM,EAAGpG,SAAU,SAAC8F,GAAQ,EAAKD,aAAaC,IAAMG,MAAO7D,KAAKV,MAAM6C,OAChF,kBAAC,IAAD,CAAQpB,KAAK,UAAUe,QAAS,WAAQ,EAAKoB,gBAA7C,qB,GA/De7F,IAAM4C,WAgFtBC,eAPS,SAAAZ,GACpB,MAAO,CACHa,MAAOb,EAAMa,SAKmB,KAAzBD,CAA+B+C,G,SChFxCgB,E,4MAEF3E,MAAQ,G,kEAEa,IAAD,OAGV4E,EAAWlE,KAAKxC,MAAM2G,MAAMC,OAAOF,SACzC1E,MAAM,QAAD,OAAS0E,GAAY,CACtBzE,QAAS,CACL,eAAgB,mBAChBqE,cAAe9D,KAAKxC,MAAM2C,SAG7BT,MAAK,SAAAC,GACF,EAAKG,SAAS,CAAEqD,OAAQxD,EAAIzB,Y,+BASpC,OACI,oCACM8B,KAAKV,MAAM6D,OACT,oCACI,kBAAC,IAAD,CAAM5E,MAAOyB,KAAKV,MAAM6D,OAAO5E,QAE/B,kBAAC,EAAD,CAAckD,QAASzB,KAAKV,MAAM6D,OAAO1B,QAASlD,MAAOyB,KAAKV,MAAM6D,OAAO5E,MAAOY,GAAIa,KAAKxC,MAAM2G,MAAMC,OAAOF,SAAUxC,KAAM1B,KAAKV,MAAM6D,OAAOzB,OAChJ,wCACA,kBAAC,EAAD,CAAkBvC,GAAIa,KAAKxC,MAAM2G,MAAMC,OAAOF,YAIlD,kBAAC,IAAD,W,GApCO7G,IAAM4C,WAmDlBC,eAPS,SAAAZ,GACpB,MAAO,CACHa,MAAOb,EAAMa,SAKmB,KAAzBD,CAA+B+D,GCK/BI,G,OAxDA,SAAC7G,GACZ,IAAM8G,EAAoBhE,iBAAO,MA2CjC,OACI,6BACI,2BAAOS,KAAK,OAAO2B,KAAK,QAAQ6B,YAAY,qBAAqBpF,GAAG,UACpE,4BAAQ2C,QAnCG,WAEfwC,EAAkB9D,QAAQC,OAAOsB,YAAW,SAACrB,GACzC,IAEIxC,EAAO,CAAEK,MAFD6C,SAASoD,eAAe,SAASX,MAElBpC,QAASf,EAAQgB,KAAME,aAAaC,QAAQ,YAAa,oBAAuBG,IAAQC,IAAI,cACvHnE,QAAQC,IAAIG,GACZsB,MAAM,QAAS,CACX0C,OAAQ,OACRC,KAAMC,KAAKC,UAAUnE,GACrBuB,QAAS,CACL,OAAU,mBACV,eAAgB,sBAGnBC,MAAK,SAAUG,GACZ/B,QAAQC,IAAI8B,WAmBpB,eACA,4BAAQiC,QAdG,WACfwC,EAAkB9D,QAAQC,OAAOF,YAAW,SAACrC,GAChBA,EAAjBwC,OAD2C,IACnCC,EAASzC,EAATyC,KAChB7C,QAAQC,IAAI,aAAc4C,GAC1BC,MAAM,+DAUN,eACA,kBAAC,IAAD,CAAa0B,IAAKgC,IAClB,kBAAC,IAAD,S,SCtCGG,E,uKAjBP,OACI,kBAAC,IAAD,CACIC,OAAO,UACPnG,MAAM,0BACNoG,SAAS,oBACT/F,MAAO,CACH,kBAAC,IAAD,CAAQmC,KAAK,UAAUzC,IAAI,WACvB,uBAAGY,KAAK,KAAR,mB,GAVF7B,IAAM4C,W,SCMf2E,EAAc,SAAAzE,GACvB,MAAO,CACHY,KCVoB,eDWpBZ,MAAOA,IAWF0E,EAAW,SAAAC,GACpB,MAAO,CACH/D,KCvBiB,YDwBjB+D,MAAOA,IAIFC,EAAS,WAIlB,OAHAnD,aAAaoD,WAAW,SACxBpD,aAAaoD,WAAW,kBACxBpD,aAAaoD,WAAW,YACjB,CACHjE,KChCmB,gBDoCdkE,GAAmB,SAAAC,GAC5B,OAAO,SAAAC,GACHC,YAAW,WACPD,EAASJ,OACO,IAAjBG,KAkHEG,GAAQ,SAAClF,GAClB,OAAO,SAAAgF,GAEHrH,QAAQC,IAAI,mBACZuH,IAAMrD,IAAN,2CAAsD,CAClDsD,YAAa,OACb9F,QAAS,CACL,eAAgB,mBAChB,OAAU,mBACV,cAAgB,SAAhB,OAA0BU,MAGhCT,MAAK,SAAAC,GACH,IAAMyD,EAASzD,EAAIzB,KAAKsH,GACxB5D,aAAa6D,QAAQ,SAAUrC,GAC/B+B,EA5Ja,SAAA/B,GACrB,MAAO,CACHrC,KCde,UDefqC,OAAQA,GAyJKsC,CAAUtC,OAEpBG,OAAM,SAAAoC,GACL7H,QAAQC,IAAI4H,QEvKlBC,GAAS,CACXC,SAAU,CACNC,KAAM,GAEVC,WAAY,CACRD,KAAM,KAGRE,GAAa,CACfD,WAAY,CACRE,OAAQ,EACRH,KAAM,KAmGC5F,oBAhBf,SAAyBZ,GACrB,MAAO,CACH4G,QAAS5G,EAAM4G,QACfpB,MAAOxF,EAAMwF,MACb3E,MAAOb,EAAMa,UAIrB,SAA4BgF,GACxB,MAAO,CACHgB,OAAQ,SAACC,EAAUC,GAAX,OAAwBlB,EFhEf,SAACiB,EAAUC,GAChC,OAAO,SAAAlB,GACHA,EA9CG,CACHpE,KCLkB,eDmDlB,IAAI7C,EAAO,CACPkI,SAAUA,EACVC,SAAUA,GAEdvI,QAAQC,IAAIG,GACZsB,MAAM,uBAAwB,CAC1B0C,OAAQ,OACRC,KAAMC,KAAKC,UAAUnE,GACrBuB,QAAS,CACL,eAAgB,sBAGnBC,MAAK,SAAAC,GACF,OAAOA,EAAIC,UAEdF,MAAK,SAAAC,GACF,IAAMQ,EAAQR,EAAIzB,KAAKI,IACvB+G,GAAM1F,EAAIzB,KAAKI,KACf,IAAMgI,EAAiB,IAAIC,MAAK,IAAIA,MAAOC,UAAY,MAOvD,OANA5E,aAAa6D,QAAQ,QAAStF,GAC9ByB,aAAa6D,QAAQ,WAAYW,GACjCxE,aAAa6D,QAAQ,iBAAkBa,GACvCnB,EAASP,EAAYzE,IACrBgF,EAASF,GAAiB,OAC1BnH,QAAQC,IAAIoC,EAAO,mBACZA,KAEVT,MAAK,SAAAS,GACFrC,QAAQC,IAAI,mBAEZyB,MAAM,sBAAuB,CACzBC,QAAS,CACL,eAAgB,mBAChB,cAAgB,SAAhB,OAA0BU,MAIhCT,MAAK,SAAAC,GACH,OAAOA,EAAIC,UACZF,MAAK,SAAAG,GACJ+B,aAAa6D,QAAQ,WAAY5F,EAAS3B,KAAKsH,IAC/C1H,QAAQC,IAAI8B,EAAS3B,KAAKsH,UAIjCjC,OAAM,SAAAC,GACH2B,EAASN,EAASrB,EAAIiD,cEeWjI,CAAkB4H,EAAUC,QAM9DnG,EA9FF,SAAC1C,GACV,IAAIkJ,EAAe,KACflJ,EAAMsH,QACN4B,EACI,2BAAIlJ,EAAMsH,MAAM2B,UAexB,OACI,6BACKC,EAEGlJ,EAAM0I,QAEF,kBAAC,IAAD,MAGA,kBAAC,IAAD,iBACQN,GADR,CAEIlD,KAAK,QACLiE,cAAe,CACXC,UAAU,GAGdC,SA5BH,SAACC,GACdhJ,QAAQC,IAAI,WAAY+I,GACxBtJ,EAAM2I,OAAOW,EAAOV,SAAUU,EAAOT,UACrC7I,EAAMuJ,QAAQC,KAAK,aA0BHC,eAtBG,SAACC,GACpBpJ,QAAQC,IAAI,UAAWmJ,MAuBP,kBAAC,IAAK7I,KAAN,CACI8I,MAAM,WACNzE,KAAK,WACL0E,MAAO,CACH,CACIC,UAAU,EACVZ,QAAS,iCAIjB,kBAAC,IAAD,OAGJ,kBAAC,IAAKpI,KAAN,CACI8I,MAAM,WACNzE,KAAK,WACL0E,MAAO,CACH,CACIC,UAAU,EACVZ,QAAS,iCAIjB,kBAAC,IAAMa,SAAP,OAGJ,kBAAC,IAAKjJ,KAAS2H,GACX,2BAAOjF,KAAK,SAAS8C,MAAM,WAD/B,KAGJ,kBAAC,IAAD,CACY0D,MAAO,CAAEC,YAAa,QACtBC,GAAG,YAFf,kB,UCqCLvH,oBAbf,SAAyBZ,GACrB,MAAO,CACH4G,QAAS5G,EAAM4G,QACfpB,MAAOxF,EAAMwF,UAIrB,SAA4BK,GACxB,MAAO,CACHgB,OAAQ,SAACC,EAAUsB,EAAOC,EAAWC,GAA7B,OAA2CzC,EHrBrC,SAACiB,EAAUsB,EAAOC,EAAWC,GAC/C,OAAO,SAAAzC,GACHA,EArGG,CACHpE,KCLkB,eD0GlB,IAAI7C,EAAO,CACPkI,SAAUA,EACVsB,MAAOA,EACPC,UAAWA,EACXC,UAAWA,GAEf9J,QAAQC,IAAIG,GACZsB,MAAM,8BAA+B,CACjC0C,OAAQ,OACRC,KAAMC,KAAKC,UAAUnE,GACrBuB,QAAS,CACL,OAAU,mBACV,eAAgB,sBAGnBC,MAAK,SAAAC,GACF,OAAOA,EAAIC,UAEdF,MAAK,SAAAC,GACF,IAAMQ,EAAQR,EAAIzB,KAAKI,IACjBgI,EAAiB,IAAIC,MAAK,IAAIA,MAAOC,UAAY,MACvD5E,aAAa6D,QAAQ,QAAStF,GAC9ByB,aAAa6D,QAAQ,WAAYW,GACjCxE,aAAa6D,QAAQ,iBAAkBa,GACvCnB,EAASP,EAAYzE,IACrBgF,EAASF,GAAiB,UAE7B1B,OAAM,SAAAC,GACH2B,EAASN,EAASrB,QGVkChF,CAAe4H,EAAUsB,EAAOC,EAAWC,QAIhG1H,EAjHU,SAAC1C,GAAW,IAAD,EACjBqK,IAAKC,UAAbC,EADyB,qBAUhC,OACI,kBAAC,IAAD,CAEIA,KAAMA,EACNrF,KAAK,WACLmE,SAZS,SAACC,GACdhJ,QAAQC,IAAI,WAAY+I,GACxBtJ,EAAM2I,OAAOW,EAAOV,SAAUU,EAAOY,MAAOZ,EAAOT,SAAUS,EAAOkB,SACpExK,EAAMuJ,QAAQC,KAAK,MAUfiB,oBAAkB,GAElB,kBAAC,IAAK5J,KAAN,CACI8I,MAAM,WACNzE,KAAK,WACL0E,MAAO,CACH,CACIC,UAAU,EACVZ,QAAS,iCAIjB,kBAAC,IAAD,OAEJ,kBAAC,IAAKpI,KAAN,CACIqE,KAAK,QACLyE,MAAM,SACNC,MAAO,CACH,CACIrG,KAAM,QACN0F,QAAS,kCAEb,CACIY,UAAU,EACVZ,QAAS,+BAIjB,kBAAC,IAAD,OAGJ,kBAAC,IAAKpI,KAAN,CACIqE,KAAK,WACLyE,MAAM,WACNC,MAAO,CACH,CACIC,UAAU,EACVZ,QAAS,gCAGjByB,aAAW,GAEX,kBAAC,IAAMZ,SAAP,OAGJ,kBAAC,IAAKjJ,KAAN,CACIqE,KAAK,UACLyE,MAAM,mBACNgB,aAAc,CAAC,YACfD,aAAW,EACXd,MAAO,CACH,CACIC,UAAU,EACVZ,QAAS,iCAEb,gBAAG2B,EAAH,EAAGA,cAAH,MAAwB,CACpBC,UADoB,SACVC,EAAMzE,GACZ,OAAKA,GAASuE,EAAc,cAAgBvE,EAIrC0E,QAAQC,OAAO,oDAHXD,QAAQE,eAQ/B,kBAAC,IAAMnB,SAAP,OAKJ,kBAAC,IAAKjJ,KAAN,KACI,2BAAO0C,KAAK,SAAS8C,MAAM,WAD/B,KAGQ,kBAAC,IAAD,CACA0D,MAAO,CAAEC,YAAa,QACtBC,GAAG,WAFH,gBCtDLiB,G,4MA3CXpJ,MAAQ,CACJqJ,YAAa,GACbvF,OAAQzB,SAASC,aAAaC,QAAQ,c,kEAGrB,IAAD,OAIhBrC,MAAM,QAAS,CACXC,QAAS,CACL,eAAgB,sBAGnBC,MAAK,SAAAC,GAEF,OADAA,EAAIC,OACGD,KAEVD,MAAK,SAAAC,GAIF,OAHkBA,EAAIzB,KAAK0K,QAAO,SAAAxK,GAAI,OAClCA,EAAKsD,OAAS,EAAKpC,MAAM8D,aAIhC1D,MAAK,SAAAmJ,GACF/K,QAAQC,IAAI8K,GACZ,EAAK/I,SAAS,CAAE6I,YAAaE,S,+BAKrC,OACI,oCACI,kBAAC9I,EAAD,CAAS7B,KAAM8B,KAAKV,MAAMqJ,mB,GAnChBtL,IAAM4C,WCuBjB6I,GAjBI,WACf,OACI,6BACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW5J,IACjC,kBAAC,IAAD,CAAO0J,OAAK,EAACC,KAAK,UAAUC,UAAW5E,IACvC,kBAAC,IAAD,CAAO0E,OAAK,EAACC,KAAK,mBAAmBC,UAAWhF,IAChD,kBAAC,IAAD,CAAO8E,OAAK,EAACC,KAAK,WAAWC,UAAWxE,IACxC,kBAAC,IAAD,CAAOsE,OAAK,EAACC,KAAK,UAAUC,UAAWC,KACvC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,WAAWC,UAAWE,KACxC,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,gBAAgBC,UAAWP,O,uCCbjDU,GAA4BC,KAA5BD,OAAQE,GAAoBD,KAApBC,QAASC,GAAWF,KAAXE,OAEnBC,G,uKAGE,OACI,kBAAC,KAAD,CAAQC,UAAU,UACd,kBAACL,GAAD,KACI,yBAAKK,UAAU,SAGf,kBAAC,KAAD,CAAMC,MAAM,OAAOC,KAAK,aAAaC,oBAAqB,CAAC,MAEnD5J,KAAKxC,MAAMqM,gBACP,oCACI,kBAAC,KAAKxL,KAAN,CAAWC,IAAI,IAAIwD,QAAS9B,KAAKxC,MAAMuH,QAAvC,UAEA,kBAAC,KAAK1G,KAAN,CAAWC,IAAI,KACX,kBAAC,IAAD,CAAMmJ,GAAG,KAAT,YACJ,kBAAC,KAAKpJ,KAAN,CAAWC,IAAI,KACX,kBAAC,IAAD,CAAMmJ,GAAG,iBAAT,kBAKR,kBAAC,KAAKpJ,KAAN,CAAWC,IAAI,KACX,kBAAC,IAAD,CAAMmJ,GAAG,UAAT,YAMpB,kBAAC6B,GAAD,CAAS/B,MAAO,CAAEuC,QAAS,WACvB,kBAAC,KAAD,CAAYvC,MAAO,CAAEwC,OAAQ,WACzB,kBAAC,KAAW1L,KAAZ,KAAiB,kBAAC,IAAD,CAAMoJ,GAAG,KAAT,SACjB,kBAAC,KAAWpJ,KAAZ,KAAiB,kBAAC,IAAD,CAAMoJ,GAAG,WAAT,yBAErB,yBAAKgC,UAAU,uBAAuBzJ,KAAKxC,MAAMwM,WAErD,kBAACT,GAAD,CAAQhC,MAAO,CAAE0C,UAAW,WAA5B,+C,GArCW5M,IAAM4C,WA8DlBiK,mBAAWhK,aAV1B,SAAyBZ,GACrB,MAAO,CACH4G,QAAS5G,EAAM4G,QACfpB,MAAOxF,EAAMwF,MACb3E,MAAOb,EAAMa,UAVrB,SAA4BgF,GACxB,MAAO,CACHJ,OAAQ,kBAAMI,EAAS3G,SAcL0B,CAA6CsJ,KC1DjEW,G,kLAGFnK,KAAKxC,MAAM4M,oB,+BAIX,OAEE,kBAAC,IAAD,KACE,kBAAC,GAAiBpK,KAAKxC,MACrB,kBAAC,GAAD,Y,GAXQH,IAAM4C,WA6BTC,gBAVS,SAAAZ,GACtB,MAAO,CACLuK,gBAAiC,OAAhBvK,EAAMa,UAGA,SAAAgF,GACzB,MAAO,CACLiF,gBAAiB,kBAAMjF,GPqGhB,SAAAA,GACH,IAAMhF,EAAQyB,aAAaC,QAAQ,SACnC,QAAcwI,IAAVlK,EACAgF,EAASJ,SACN,CACH,IAAMuB,EAAiB,IAAIC,KAAK3E,aAAaC,QAAQ,mBACjDyE,GAAkB,IAAIC,KACtBpB,EAASJ,MAETI,EAASP,EAAYzE,IACrBgF,EAASF,IAAkBqB,EAAeE,WAAY,IAAID,MAAOC,WAAa,eO5G/EtG,CAA6CiK,IC/BxCG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAStG,MACvB,2D,iCClBOuG,GAAe,SAACC,EAAWC,GACpC,OAAO,6BACAD,GACAC,ICALC,GAAe,CACjB1K,MAAO,KACP2E,MAAO,KACPoB,SAAS,EACT9C,OAAQ,MAGN0H,GAAY,SAACxL,EAAOyL,GACtB,OAAOL,GAAapL,EAAO,CACvBwF,MAAO,KAAMoB,SAAS,KAIxBtB,GAAc,SAACtF,EAAOyL,GACxB,OAAOL,GAAapL,EAAO,CACvBa,MAAO4K,EAAO5K,MACd2E,MAAO,KACPoB,SAAS,KAIXrB,GAAW,SAACvF,EAAOyL,GACrB,OAAOL,GAAapL,EAAO,CACvBwF,MAAOiG,EAAOjG,MACdoB,SAAS,KAIX8E,GAAa,SAAC1L,EAAOyL,GACvB,OAAOL,GAAapL,EAAO,CACvBa,MAAO,KACPiD,OAAQ,QAIVsC,GAAY,SAACpG,EAAOyL,GACtB,OAAOL,GAAapL,EAAO,CACvBa,MAAO,KACPiD,OAAQ2H,EAAO3H,UAgBR6H,GAZC,WAAmC,IAAlC3L,EAAiC,uDAAzBuL,GAAcE,EAAW,uCAC9C,OAAQA,EAAOhK,MACX,IT/CkB,aS+CW,OAAO+J,GAAUxL,GAC9C,IT/CoB,eS+CW,OAAOsF,GAAYtF,EAAOyL,GACzD,IT/CiB,YS+CW,OAAOlG,GAASvF,EAAOyL,GACnD,IT/CmB,cS+CW,OAAOC,GAAW1L,GAChD,IT/Ce,US+CW,OAAOoG,GAAUpG,EAAOyL,GAClD,QACI,OAAOzL,I,UCxCb4L,GAAQC,uBAAYF,GAAS,GAAIG,+BAAoBC,2BAAgBC,QAErEC,GACJ,kBAAC,IAAD,CAAUL,MAAOA,IACf,kBAAC,GAAD,OAIJM,IAASC,OACP,kBAAC,IAAMC,WAAP,KACGH,IAEHnK,SAASoD,eAAe,SH0GpB,kBAAmBmH,WACrBA,UAAUC,cAAcC,MACrBnM,MAAK,SAAAoM,GACJA,EAAaC,gBAEdxI,OAAM,SAAAuB,GACLhH,QAAQgH,MAAMA,EAAM2B,c","file":"static/js/main.6c6a680e.chunk.js","sourcesContent":["import React from 'react'\nimport { List, Avatar, Space } from 'antd';\nimport { MessageOutlined, LikeOutlined, StarOutlined } from '@ant-design/icons';\n\n\n\n\n\nconst IconText = ({ icon, text }) => (\n    <Space>\n        {React.createElement(icon)}\n        {text}\n    </Space>\n);\n\nconst Resumes = (props) => {\n    return (\n        <>\n            <List\n                itemLayout=\"vertical\"\n                size=\"large\"\n                pagination={{\n                    onChange: page => {\n                        console.log(page);\n                    },\n                    pageSize: 3,\n                }}\n                dataSource={props.data}\n\n                renderItem={item => (\n                    <List.Item\n                        key={item.title}\n                        actions={[\n                            <IconText icon={StarOutlined} text=\"156\" key=\"list-vertical-star-o\" />,\n                            <IconText icon={LikeOutlined} text=\"156\" key=\"list-vertical-like-o\" />,\n                            <IconText icon={MessageOutlined} text=\"2\" key=\"list-vertical-message\" />,\n                        ]}\n                        extra={\n                            <img\n                                width={272}\n                                alt=\"logo\"\n                                src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\n                            />\n                        }\n                    >\n                        <List.Item.Meta\n                            avatar={<Avatar src={item.avatar} />}\n                            title={<a href={`/edit/${item.id}`}>{item.title}</a>}\n                            description={item.description}\n                        />\n\n                    </List.Item>\n                )}\n\n            />\n        </>\n    )\n}\n\nexport default Resumes;","import React from 'react'\nimport Resumes from '../Resume'\nimport axios from 'axios'\nimport { connect } from \"react-redux\"\n\n\nclass ResumeList extends React.Component {\n\n    state = {\n        resumes: []\n    }\n\n    componentDidMount() {\n\n        fetch(`/api/`, {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => {\n                let response = res.json()\n                return response\n            })\n            .then(response => {\n                console.log(response)\n                this.setState({ resumes: response.data })\n            })\n\n    }\n    render() {\n        return (\n            <>\n                <Resumes data={this.state.resumes} />\n            </>\n        );\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        token: state.token\n    }\n}\n\n\nexport default connect(mapStateToProps, null)(ResumeList);\n\n","\nimport React, { useRef } from 'react';\nimport EmailEditor from 'react-email-editor';\nimport DjangoCSRFToken from 'django-react-csrftoken';\nimport Cookies from 'js-cookie'\n\n\nconst EditExisting = (props) => {\n    const emailEditorRef = useRef(null);\n\n\n    const saveDesign = () => {\n        emailEditorRef.current.editor.saveDesign((design) => {\n            let data = { title: props.title, content: design, id: props.id, \"csrfmiddlewaretoken\": Cookies.get('csrftoken') }\n            console.log(data)\n            fetch(`/api/${props.id}/update/`, {\n                method: 'PUT',\n                body: JSON.stringify(data),\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            })\n                .then(function (response) {\n                    console.log(response);\n                    alert('Successfully saved your template!')\n                })\n\n        });\n    };\n\n    const exportHtml = () => {\n        emailEditorRef.current.editor.exportHtml((data) => {\n            const { design, html } = data;\n            console.log('exportHtml', html);\n            alert('Output HTML has been logged in your developer console.');\n\n            let html2 = new Blob([html], {\n                type: \"application/pdf\"\n            });\n\n            let url = URL.createObjectURL(html2)\n            let a = document.createElement('a');\n            a.href = url\n            a.download = 'index.html';\n            a.click();\n        });\n    };\n\n\n    const onLoad = () => {\n        emailEditorRef.current.editor.loadDesign(props.content);\n        console.log(props, '---props')\n    };\n\n\n    return (\n        <>\n            {\n                props.user === parseInt(localStorage.getItem('userdata')) ?\n                    <div>\n\n                        <button onClick={saveDesign}>Save Design</button>\n                        <button onClick={exportHtml}>Download HTML</button>\n                        <EmailEditor ref={emailEditorRef} onLoad={onLoad} />\n                        <DjangoCSRFToken />\n\n                    </div>\n                    : <div>\n\n                        <button onClick={exportHtml}>Download HTML</button>\n                        <EmailEditor ref={emailEditorRef} onLoad={onLoad} />\n                        <DjangoCSRFToken />\n\n                    </div>\n            }\n        </>\n    );\n};\n\nexport default EditExisting\n\n","\nimport React from 'react';\nimport { Comment, Tooltip, Avatar } from 'antd';\nimport moment from 'moment';\n\nfunction IndivComment(props) {\n    return (\n        <div>\n            <Comment\n\n                author={props.commentsData.name}\n                avatar={\n                    <Avatar\n                        src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\n                        alt=\"Han Solo\"\n                    />\n                }\n                content={\n                    <p>\n                        {props.commentsData.body}\n                    </p>\n                }\n                datetime={\n                    <Tooltip title={moment().format('YYYY-MM-DD HH:mm:ss')}>\n                        <span>{props.commentsData.created_on}</span>\n                    </Tooltip>\n                }\n            />\n        </div>\n    );\n}\n\nexport default IndivComment;","import React from 'react';\nimport Cookies from 'js-cookie'\nimport moment from 'moment';\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport IndivComment from '../Comment';\nimport { Comment, Avatar, Form, Button, List, Input } from 'antd';\n\n\nconst { TextArea } = Input;\n\nclass CommentContainer extends React.Component {\n\n    state = {\n        body: \"\"\n    }\n    handleClick = () => {\n        let data = { resume: this.props.id, name: localStorage.getItem('username'), userid: localStorage.getItem('userdata'), body: this.state.body, \"csrfmiddlewaretoken\": Cookies.get('csrftoken') }\n        console.log(data)\n        fetch(`/api/comment/${this.props.id}/`, {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(response => {\n                alert('Successfully posted your comment!')\n                return response.json()\n\n\n            })\n            .then(res => {\n                console.log(res)\n                this.setState(prevState => ({ commentsList: [...prevState.commentsList, res] }))\n                this.setState({ body: \"\" })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    handleChange = (e) => {\n        e.preventDefault()\n        this.setState({ body: e.target.value })\n    }\n    componentDidMount() {\n\n        fetch(`/api/comment/${this.props.id}/`, {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: this.props.token\n            }\n        })\n            .then(res => {\n\n                this.setState({ commentsList: res.data })\n            })\n\n    }\n\n    render() {\n\n        return (\n            <>\n                {\n                    this.state.commentsList ? this.state.commentsList.map(item => {\n                        return <IndivComment commentsData={item} />\n                    }) : <p>no comments yet</p>\n                }\n\n\n                <TextArea rows={4} onChange={(e) => { this.handleChange(e) }} value={this.state.body} />\n                <Button type=\"primary\" onClick={() => { this.handleClick() }}>\n                    Post Comment</Button>\n\n\n            </>\n        )\n\n    };\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.token\n    }\n}\n\n\nexport default connect(mapStateToProps, null)(CommentContainer);\n\n","import React from 'react'\nimport axios from 'axios'\nimport { Card } from \"antd\";\nimport EditExisting from '../EditExisting';\nimport { connect } from \"react-redux\";\nimport CommentContainer from './CommentContainer';\nimport { Spin } from 'antd';\n\n\n\n\nclass ResumeDetail extends React.Component {\n\n    state = {\n    }\n    componentDidMount() {\n\n\n        const resumeID = this.props.match.params.resumeID\n        fetch(`/api/${resumeID}`, {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: this.props.token\n            }\n        })\n            .then(res => {\n                this.setState({ resume: res.data })\n            })\n\n\n    }\n\n\n    render() {\n\n        return (\n            <>\n                { this.state.resume ?\n                    <>\n                        <Card title={this.state.resume.title}>\n                        </Card>\n                        <EditExisting content={this.state.resume.content} title={this.state.resume.title} id={this.props.match.params.resumeID} user={this.state.resume.user} />\n                        <p>Comments:</p>\n                        <CommentContainer id={this.props.match.params.resumeID} />\n                    </>\n\n                    :\n                    <Spin />\n                }\n            </>\n\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.token\n    }\n}\n\n\nexport default connect(mapStateToProps, null)(ResumeDetail);\n\n\n","\nimport React, { useRef, useState } from 'react';\nimport EmailEditor from 'react-email-editor';\nimport DjangoCSRFToken from 'django-react-csrftoken';\nimport Cookies from 'js-cookie'\nimport domtoimage from 'dom-to-image';\n\n\n\n\n\nconst Editor = (props) => {\n    const emailEditorRefNew = useRef(null);\n\n    // const printDocument = () => {\n    //     const input = exportHtml()\n\n\n    //     domtoimage.toPng(input)\n\n    // }\n\n\n    const saveDesign = () => {\n        // printDocument()\n        emailEditorRefNew.current.editor.saveDesign((design) => {\n            let title = document.getElementById(\"title\").value\n\n            let data = { title: title, content: design, user: localStorage.getItem('userdata'), \"csrfmiddlewaretoken\": Cookies.get('csrftoken') }\n            console.log(data)\n            fetch('/api/', {\n                method: 'POST',\n                body: JSON.stringify(data),\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            })\n                .then(function (response) {\n                    console.log(response);\n                })\n\n        });\n    };\n\n    const exportHtml = () => {\n        emailEditorRefNew.current.editor.exportHtml((data) => {\n            const { design, html } = data;\n            console.log('exportHtml', html);\n            alert('Output HTML has been logged in your developer console.');\n        });\n    };\n\n\n\n    return (\n        <div>\n            <input type=\"text\" name=\"title\" placeholder=\"name your template\" id=\"title\" />\n            <button onClick={saveDesign}>Save Design</button>\n            <button onClick={exportHtml}>Export HTML</button>\n            <EmailEditor ref={emailEditorRefNew} />\n            <DjangoCSRFToken />\n\n        </div>\n    );\n};\n\nexport default Editor\n\n","import React from 'react'\nimport { Result, Button } from 'antd';\n\nclass Success extends React.Component {\n\n    render() {\n        return (\n            <Result\n                status=\"success\"\n                title=\"Successfully Logged in!\"\n                subTitle=\"Let's get started\"\n                extra={[\n                    <Button type=\"primary\" key=\"console\">\n                        <a href=\"/\">To Home</a>\n                    </Button>,\n\n                ]}\n            />\n\n        );\n    }\n}\n\nexport default Success;\n\n\n\n","import * as actionTypes from './actionTypes'\nimport axios from 'axios'\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = token => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token\n    }\n}\n\nexport const idSuccess = userid => {\n    return {\n        type: actionTypes.AUTH_ID,\n        userid: userid\n    }\n}\n\nexport const authFail = error => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('username')\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    };\n}\n\nexport const checkAuthTimeout = expirationTime => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout())\n        }, expirationTime * 1000)\n    }\n}\n\n\nexport const authLogin = (username, password) => {\n    return dispatch => {\n        dispatch(authStart());\n        let data = {\n            username: username,\n            password: password\n        }\n        console.log(data)\n        fetch('/dj-rest-auth/login/', {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => {\n                return res.json()\n            })\n            .then(res => {\n                const token = res.data.key\n                getid(res.data.key)\n                const expirationDate = new Date(new Date().getTime() + 3600 * 1000)\n                localStorage.setItem('token', token)\n                localStorage.setItem('username', username)\n                localStorage.setItem('expirationDate', expirationDate)\n                dispatch(authSuccess(token))\n                dispatch(checkAuthTimeout(3600))\n                console.log(token, '---back w token')\n                return token\n            })\n            .then(token => {\n                console.log('getid is firing')\n\n                fetch(`/dj-rest-auth/user/`, {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': `Token ${token}`\n                    }\n                }\n\n                ).then(res => {\n                    return res.json()\n                }).then(response => {\n                    localStorage.setItem('userdata', response.data.pk)\n                    console.log(response.data.pk)\n                })\n\n            })\n            .catch(err => {\n                dispatch(authFail(err.message))\n            })\n\n    }\n}\n\nexport const signup = (username, email, password1, password2) => {\n    return dispatch => {\n        dispatch(authStart());\n        let data = {\n            username: username,\n            email: email,\n            password1: password1,\n            password2: password2\n        }\n        console.log(data)\n        fetch('/dj-rest-auth/registration/', {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => {\n                return res.json()\n            })\n            .then(res => {\n                const token = res.data.key\n                const expirationDate = new Date(new Date().getTime() + 3600 * 1000)\n                localStorage.setItem('token', token)\n                localStorage.setItem('username', username)\n                localStorage.setItem('expirationDate', expirationDate)\n                dispatch(authSuccess(token))\n                dispatch(checkAuthTimeout(3600))\n            })\n            .catch(err => {\n                dispatch(authFail(err))\n            })\n\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token')\n        if (token === undefined) {\n            dispatch(logout())\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\n            if (expirationDate <= new Date()) {\n                dispatch(logout())\n            } else {\n                dispatch(authSuccess(token))\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000))\n            }\n        }\n    }\n}\n\nexport const getid = (token) => {\n    return dispatch => {\n\n        console.log('getid is firing')\n        axios.get(`http://localhost:8000/dj-rest-auth/user/`, {\n            credentials: 'omit',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Authorization': `Token ${token}`\n            }\n        }\n        ).then(res => {\n            const userid = res.data.pk\n            localStorage.setItem('userid', userid)\n            dispatch(idSuccess(userid))\n\n        }).catch(Error => {\n            console.log(Error)\n        })\n\n\n    }\n}","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\nexport const AUTH_ID = 'AUTH_ID';\n\n","import React from 'react'\nimport { Form, Input, Button, Spin } from 'antd';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/auth';\nimport { NavLink } from 'react-router-dom';\n\n\n\nconst layout = {\n    labelCol: {\n        span: 8,\n    },\n    wrapperCol: {\n        span: 16,\n    },\n};\nconst tailLayout = {\n    wrapperCol: {\n        offset: 8,\n        span: 16,\n    },\n};\n\n\nconst Demo = (props) => {\n    let errorMessage = null;\n    if (props.error) {\n        errorMessage = (\n            <p>{props.error.message}</p>\n        );\n    }\n    const onFinish = (values) => {\n        console.log('Success:', values);\n        props.onAuth(values.username, values.password);\n        props.history.push('/success');\n\n    };\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo);\n    };\n\n\n    return (\n        <div>\n            {errorMessage}\n            {\n                props.loading ?\n\n                    <Spin />\n\n                    :\n                    <Form\n                        {...layout}\n                        name=\"basic\"\n                        initialValues={{\n                            remember: true,\n                        }}\n\n                        onFinish={onFinish}\n                        onFinishFailed={onFinishFailed}\n                    >\n                        <Form.Item\n                            label=\"Username\"\n                            name=\"username\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your username!',\n                                },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"Password\"\n                            name=\"password\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your password!',\n                                },\n                            ]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n\n                        <Form.Item {...tailLayout}>\n                            <input type=\"submit\" value=\"submit\" />\n                            Or\n                    <NavLink\n                                style={{ marginRight: '10px' }}\n                                to='/signup/'>  signup\n                    </NavLink>\n                        </Form.Item>\n                    </Form>\n            }\n        </div>\n    );\n};\n\nfunction mapStateToProps(state) {\n    return {\n        loading: state.loading,\n        error: state.error,\n        token: state.token\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        onAuth: (username, password) => dispatch(actions.authLogin(username, password)\n        )\n\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Demo);","import React from 'react';\nimport {\n    Form,\n    Input,\n} from 'antd';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/auth';\nimport { NavLink } from 'react-router-dom';\n\n\n\n\n\n\nconst RegistrationForm = (props) => {\n    const [form] = Form.useForm();\n\n    const onFinish = (values) => {\n        console.log('Success:', values);\n        props.onAuth(values.username, values.email, values.password, values.confirm)\n        props.history.push('/');\n    };\n\n\n    return (\n        <Form\n\n            form={form}\n            name=\"register\"\n            onFinish={onFinish}\n            scrollToFirstError\n        >\n            <Form.Item\n                label=\"Username\"\n                name=\"username\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your username!',\n                    },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n            <Form.Item\n                name=\"email\"\n                label=\"E-mail\"\n                rules={[\n                    {\n                        type: 'email',\n                        message: 'The input is not valid E-mail!',\n                    },\n                    {\n                        required: true,\n                        message: 'Please input your E-mail!',\n                    },\n                ]}\n            >\n                <Input />\n            </Form.Item>\n\n            <Form.Item\n                name=\"password\"\n                label=\"Password\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your password!',\n                    },\n                ]}\n                hasFeedback\n            >\n                <Input.Password />\n            </Form.Item>\n\n            <Form.Item\n                name=\"confirm\"\n                label=\"Confirm Password\"\n                dependencies={['password']}\n                hasFeedback\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please confirm your password!',\n                    },\n                    ({ getFieldValue }) => ({\n                        validator(rule, value) {\n                            if (!value || getFieldValue('password') === value) {\n                                return Promise.resolve();\n                            }\n\n                            return Promise.reject('The two passwords that you entered do not match!');\n                        },\n                    }),\n                ]}\n            >\n                <Input.Password />\n            </Form.Item>\n\n\n\n            <Form.Item >\n                <input type=\"submit\" value=\"submit\" />\n                            Or\n                    <NavLink\n                    style={{ marginRight: '10px' }}\n                    to='/login/'>  login\n                    </NavLink>\n            </Form.Item>\n\n        </Form>\n    );\n};\n\nfunction mapStateToProps(state) {\n    return {\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        onAuth: (username, email, password1, password2) => dispatch(actions.signup(username, email, password1, password2))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationForm);\n","import React from 'react'\nimport Resumes from '../Resume'\nimport axios from 'axios'\nimport { connect } from \"react-redux\"\n\n\nclass MyTemplates extends React.Component {\n\n    state = {\n        mytemplates: [],\n        userid: parseInt(localStorage.getItem('userdata'))\n    }\n\n    componentDidMount() {\n\n\n\n        fetch(`/api/`, {\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        })\n            .then(res => {\n                res.json()\n                return res\n            })\n            .then(res => {\n                let filteredres = res.data.filter(item =>\n                    item.user === this.state.userid\n                )\n                return filteredres\n            })\n            .then(result => {\n                console.log(result)\n                this.setState({ mytemplates: result })\n            })\n\n    }\n    render() {\n        return (\n            <>\n                <Resumes data={this.state.mytemplates} />\n            </>\n        );\n    }\n}\n\n\n\n\n\nexport default MyTemplates\n\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport ResumeList from './Components/containers/ResumeListView'\nimport ResumeDetail from './Components/containers/ResumeDetailView'\nimport Editor from './Components/Create'\nimport Success from './Components/Success'\nimport Login from './Components/containers/Login'\nimport Signup from './Components/containers/Signup'\nimport MyTemplates from './Components/containers/MyTemplates'\n\n\n\nconst BaseRouter = () => {\n    return (\n        <div>\n            <Route exact path='/' component={ResumeList} />\n            <Route exact path='/create' component={Editor} />\n            <Route exact path='/edit/:resumeID/' component={ResumeDetail} />\n            <Route exact path='/success' component={Success} />\n            <Route exact path='/login/' component={Login} />\n            <Route exact path='/signup/' component={Signup} />\n            <Route exact path='/mytemplates/' component={MyTemplates} />\n\n\n\n\n        </div>\n    )\n}\nexport default BaseRouter","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport { Link, withRouter } from \"react-router-dom\";\nimport * as actions from '../../store/actions/auth';\nimport Cookies from 'js-cookie'\n\n\nconst { Header, Content, Footer } = Layout;\n\nclass CustomLayout extends React.Component {\n\n    render() {\n        return (\n            <Layout className=\"layout\" >\n                <Header>\n                    <div className=\"logo\" />\n\n\n                    <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\n                        {\n                            this.props.isAuthenticated ?\n                                <>\n                                    <Menu.Item key=\"2\" onClick={this.props.logout}>\n                                        Logout</Menu.Item>\n                                    <Menu.Item key=\"1\">\n                                        <Link to=\"/\">Resumes</Link></Menu.Item>\n                                    <Menu.Item key=\"3\">\n                                        <Link to=\"/mytemplates/\">My Templates</Link></Menu.Item>\n\n                                </>\n\n                                :\n                                <Menu.Item key=\"2\">\n                                    <Link to=\"/login\">Login</Link></Menu.Item>\n\n                        }\n\n                    </Menu>\n                </Header>\n                <Content style={{ padding: '0 50px' }}>\n                    <Breadcrumb style={{ margin: '16px 0' }}>\n                        <Breadcrumb.Item><Link to=\"/\">Home</Link></Breadcrumb.Item>\n                        <Breadcrumb.Item><Link to=\"/create\">Create New Template</Link></Breadcrumb.Item>\n                    </Breadcrumb>\n                    <div className=\"site-layout-content\">{this.props.children}</div>\n                </Content>\n                <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\n            </Layout >\n\n        )\n    }\n}\n\n\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        logout: () => dispatch(actions.logout())\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        loading: state.loading,\n        error: state.error,\n        token: state.token\n    }\n}\n\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CustomLayout));","import React from 'react';\nimport 'grapesjs/dist/css/grapes.min.css';\n\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport BaseRouter from './routes'\nimport 'antd/dist/antd.css';\nimport CustomLayout from './Components/containers/Layout'\nimport { connect } from \"react-redux\";\nimport * as actions from './store/actions/auth'\n\n\n\n\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  render() {\n    return (\n\n      <Router>\n        <CustomLayout {...this.props}>\n          <BaseRouter />\n        </CustomLayout>\n      </Router>\n\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.token !== null\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n}","import * as actionTypes from '../actions/actionTypes'\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n    token: null,\n    error: null,\n    loading: false,\n    userid: null\n}\n\nconst authStart = (state, action) => {\n    return updateObject(state, {\n        error: null, loading: true\n    });\n}\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        token: action.token,\n        error: null,\n        loading: false\n    })\n}\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    })\n}\n\nconst authLogout = (state, action) => {\n    return updateObject(state, {\n        token: null,\n        userid: null\n    })\n}\n\nconst idSuccess = (state, action) => {\n    return updateObject(state, {\n        token: null,\n        userid: action.userid\n    })\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        case actionTypes.AUTH_ID: return idSuccess(state, action);\n        default:\n            return state\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from 'redux-thunk'\nimport { Provider } from \"react-redux\";\nimport reducer from './store/reducers/auth'\nimport { composeWithDevTools } from \"redux-devtools-extension\"\n\n\n\nconst store = createStore(reducer, {}, composeWithDevTools(applyMiddleware(thunk)))\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(\n  <React.StrictMode>\n    {app}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}